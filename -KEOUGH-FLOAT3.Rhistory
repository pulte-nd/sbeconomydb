df$msa %>% unique()
df$msa %>% unique()
runApp('sb_economy_tracker.R')
runApp('sb_economy_tracker.R')
df$msa %>% unique()
runApp('sb_economy_tracker.R')
df %>%
filter(dt==max(dt), indicator=="industry")
View(df)
df %>%
filter(dt==max(dt), indicator=="industry")
df %>% group_by(msa) %>% summarise(max(dt))
runApp('sb_economy_tracker.R')
fig <- df %>%
filter(indicator=="industry",
msa==input$select_msa) %>%
filter(dt==dt==max(dt)) %>%
mutate(per=`Job Openings`/sum(`Job Openings`)) %>%
plot_ly(
labels = ~ paste0(var," (",round(per*100,0),"%",")"),
parents = NA,
values = ~ `Job Openings`,
type = 'treemap',
hovertemplate = "%{label}<br>Job openings: %{value}<extra></extra>"#,
#text=~paste('Total Jobs =', bls_employment,
#'<br>Percentage =',paste(round(per_jobs*100,0),"%"))
) %>%
layout(autosize = TRUE,
title = paste0("Job Openings by Industry in South Bend-Mishawaka MSA as of ",format(latest_date,"%b %d, %Y")),
margin = list(l = 0, r = 0, t = 30, b = 30),
annotations = list(text = "Source: www.indianacareerconnect.com",
font = list(size = 12),
showarrow = FALSE,
xref = 'paper', x = 0.01,
yref = 'paper', y = -0.05))
runApp('sb_economy_tracker.R')
runApp('sb_economy_tracker.R')
runApp('sb_economy_tracker.R')
df_cand <- read_csv("df_cand.csv")
fig <- df_cand %>%
filter(indicator=="Occupation Group",
#msa==input$select_msa) %>%
filter(dt==max(dt))
mutate(per=Candidates/sum(Candidates)) %>%
plot_ly(
labels = ~ paste0(var," (",round(per*100,0),"%",")"),
parents = NA,
values = ~ Candidates,
type = 'treemap',
hovertemplate = "%{label}<br>Candidates: %{value}<extra></extra>"#,
#text=~paste('Total Jobs =', bls_employment,
#'<br>Percentage =',paste(round(per_jobs*100,0),"%"))
) %>%
layout(autosize = TRUE,
title = paste0("Candidates by Occupation in ",input$select_msa," as of ",format(latest_date,"%b %d, %Y")),
margin = list(l = 0, r = 0, t = 30, b = 30),
annotations = list(text = "Source: www.indianacareerconnect.com",
font = list(size = 12),
showarrow = FALSE,
xref = 'paper', x = 0.01,
yref = 'paper', y = -0.05))
runApp('sb_economy_tracker.R')
runApp('sb_economy_tracker.R')
runApp('sb_economy_tracker.R')
View(df_cand)
df_cand$msa %>% unique()
df$msa %>% unique()
library(shiny)
library(tidyverse)
library(plotly)
library(shinydashboard)
library(lubridate)
library(readxl)
library(dashboardthemes)
library(leaflet)
library(sf)
library(tigris)
library(tidycensus)
library(economiccomplexity) # for computing economic complexity
library(networkD3)
library(wordcloud2)
library(png)
runApp('sb_economy_tracker.R')
library(tidyverse)
library(plotly)
library(readxl)
library(rvest)
library(lubridate)
library(readxl)
library(tidycensus)
# per_Change foe elkhart goshen is not calculated as the base date is not existent in any indicator
# Data manipulation
base_date <- '06.25.20'
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Jobs/Jobs Available")
total_openings_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Jobs/Jobs Available")
total_openings_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="Elkhart - Goshen")
total_openings <- bind_rows(total_openings_1,total_openings_2)
df0 <- total_openings %>% select(dt,`Job Openings`,msa) %>% mutate(indicator="Total Openings") %>%
group_by(msa) %>%
mutate(go_no_go=ifelse(base_date %in% dt,"go","no go"),
per_change=ifelse(go_no_go=="go",(`Job Openings`-`Job Openings`[dt==base_date])/`Job Openings`[dt==base_date],NA)) %>%
select(-go_no_go) %>% ungroup() %>% mutate(var="Total Openings")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Jobs/Industries by Advertised Jobs")
openings_industries_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows()%>% tibble() %>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Jobs/Industries by Advertised Jobs")
openings_industries_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows()%>% tibble()%>% mutate(msa="Elkhart - Goshen")
openings_industries <- bind_rows(openings_industries_1,openings_industries_2)
df1 <- openings_industries %>% select(var=Industry,dt,`Job Openings`,msa) %>% mutate(indicator="industry") %>%
group_by(var,msa) %>%
mutate(go_no_go=ifelse(base_date %in% dt,"go","no go"),
per_change=ifelse(go_no_go=="go",(`Job Openings`-`Job Openings`[dt==base_date])/`Job Openings`[dt==base_date],NA)) %>%
select(-go_no_go) %>% ungroup()
#### Education Level of Jobs and Candidates ####
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Education, Training and Experience/Education Level of Jobs and Candidates")
educ_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Potential Candidates`=as.numeric(str_remove(`Potential Candidates`,",")),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows() %>% tibble()%>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Education, Training and Experience/Education Level of Jobs and Candidates")
educ_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Potential Candidates`=as.numeric(str_remove(`Potential Candidates`,",")),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="Elkhart - Goshen")
educ <- bind_rows(educ_1,educ_2)
base_date_educ <- '07.05.20'
df_educ <- educ %>% select(var=`Education Level`,dt,`Job Openings`,msa) %>% mutate(indicator="education") %>%
group_by(var,msa) %>%
mutate(go_no_go=ifelse(base_date_educ %in% dt,"go","no go"),
per_change=ifelse(go_no_go=="go",(`Job Openings`-`Job Openings`[dt==base_date_educ])/`Job Openings`[dt==base_date_educ],NA)) %>%
select(-go_no_go) %>% ungroup()
df <- bind_rows(df0,df1,df_educ)%>%
mutate(dt=mdy(dt)) %>%
arrange(dt) # arrange seems to be important to avoid an additional line connecting first and last observations
write_csv(df,"C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Job Postings App/df.csv")
# save a copf for the crc website with only SB MSA data
df %>%
filter(msa=="South Bend - Mishawaka") %>%
write_csv("C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/citi foundation grant/Economic complexity/ECI Dashboard (shared with CRC)/data and code (economy tracker)/df.csv")
rm(df,df0,df1,df_educ)
#### Candidate level data ####
#### Total Candidates ####
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Candidates/Candidates Available")
total_candidates_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
Candidates=as.numeric(str_remove(Candidates,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Candidates/Candidates Available")
total_candidates_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
Candidates=as.numeric(str_remove(Candidates,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="Elkhart - Goshen")
total_candidates <- bind_rows(total_candidates_1,total_candidates_2)
#### Candidates By Occupation Group ####
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Candidates/Candidates By Occupation Group")
candidate_occ_grp_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
Candidates=as.numeric(str_remove(Candidates,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Candidates/Candidates By Occupation Group")
candidate_occ_grp_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
Candidates=as.numeric(str_remove(Candidates,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="Elkhart Goshen")
candidate_occ_grp <- bind_rows(candidate_occ_grp_1,candidate_occ_grp_2)
base_date="06.26.20"
df0_cand <- total_candidates %>% select(dt,`Candidates`,msa) %>% mutate(indicator="Total Candidates") %>%
group_by(msa) %>%
mutate(go_no_go=ifelse(base_date %in% dt,"go","no go"),
per_change=ifelse(go_no_go=="go",(`Candidates`-`Candidates`[dt==base_date])/`Candidates`[dt==base_date],NA)) %>%
mutate(var="Total Candidates")%>%
select(-go_no_go) %>% ungroup()
df2_cand <- candidate_occ_grp %>% select(var=`Occupation Group`,dt,`Candidates`,msa) %>% mutate(indicator="Occupation Group") %>%
group_by(var,msa) %>%
mutate(go_no_go=ifelse(base_date %in% dt,"go","no go"),
per_change=ifelse(go_no_go=="go",(`Candidates`-`Candidates`[dt==base_date])/`Candidates`[dt==base_date],NA)) %>%
select(-go_no_go) %>% ungroup()
# education level of candidates
df_educ_cand <- educ %>% select(var=`Education Level`,dt,Candidates=`Potential Candidates`,msa) %>% mutate(indicator="education") %>%
group_by(var,msa) %>%
mutate(go_no_go=ifelse(base_date_educ %in% dt,"go","no go"),
per_change=ifelse(go_no_go=="go",(`Candidates`-`Candidates`[dt==base_date_educ])/`Candidates`[dt==base_date_educ],NA)) %>%
select(-go_no_go) %>% ungroup()
df_cand <- bind_rows(df0_cand,df2_cand,df_educ_cand)%>%
mutate(dt=lubridate::mdy(dt)) %>%
arrange(dt)
write_csv(df_cand,"C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Job Postings App/df_cand.csv")
df_cand %>%
filter(msa=="South Bend - Mishawaka") %>%
write_csv("C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/citi foundation grant/Economic complexity/ECI Dashboard (shared with CRC)/data and code (economy tracker)/df_cand.csv")
rm(df_cand,df0_cand,df2_cand,df_educ_cand)
# employers
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Jobs/Employers by Number of Job Openings")
latest_date <- list.files() %>% mdy() %>% max()
file_name <- paste0(str_pad(month(latest_date),width=2,pad=0),".",str_pad(day(latest_date),width=2,pad=0),".",substr(year(latest_date),3,4),".xls")
read_html(file_name) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(freq=log(`Job Openings`)) %>%
select(word=`Employer Name`,freq) %>%
write_rds("C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/employers_jobs.Rds")
runApp('C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/sb_economy_tracker.R')
base_date <- '06.25.20'
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Jobs/Jobs Available")
total_openings_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Jobs/Jobs Available")
total_openings_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="Elkhart - Goshen")
total_openings <- bind_rows(total_openings_1,total_openings_2)
df0 <- total_openings %>% select(dt,`Job Openings`,msa) %>% mutate(indicator="Total Openings") %>%
group_by(msa) %>%
mutate(go_no_go=ifelse(base_date %in% dt,"go","no go"),
per_change=ifelse(go_no_go=="go",(`Job Openings`-`Job Openings`[dt==base_date])/`Job Openings`[dt==base_date],NA)) %>%
select(-go_no_go) %>% ungroup() %>% mutate(var="Total Openings")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Jobs/Industries by Advertised Jobs")
openings_industries_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows()%>% tibble() %>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Jobs/Industries by Advertised Jobs")
openings_industries_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>% .[[1]] %>%
mutate(dt=str_remove(x,".xls"),
`Job Openings`=as.numeric(str_remove(`Job Openings`,",")))
}) %>% bind_rows()%>% tibble()%>% mutate(msa="Elkhart - Goshen")
openings_industries <- bind_rows(openings_industries_1,openings_industries_2)
df1 <- openings_industries %>% select(var=Industry,dt,`Job Openings`,msa) %>% mutate(indicator="industry") %>%
group_by(var,msa) %>%
mutate(go_no_go=ifelse(base_date %in% dt,"go","no go"),
per_change=ifelse(go_no_go=="go",(`Job Openings`-`Job Openings`[dt==base_date])/`Job Openings`[dt==base_date],NA)) %>%
select(-go_no_go) %>% ungroup()
runApp('C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/sb_economy_tracker.R')
df <- read_csv("df.csv")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Job Postings App/")
df <- read_csv("df.csv")
View(df)
View(df1)
View(df0)
total_openings %>% select(dt,`Job Openings`,msa) %>% mutate(indicator="Total Openings")
temp <- total_openings %>% select(dt,`Job Openings`,msa) %>% mutate(indicator="Total Openings") %>%
group_by(msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
select(-go_no_go) %>% ungroup() %>% mutate(var="Total Openings")
temp <- total_openings %>% select(dt,`Job Openings`,msa) %>% mutate(indicator="Total Openings") %>%
group_by(msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
ungroup() %>% mutate(var="Total Openings")
View(df0)
View(temp)
df1 <- openings_industries %>% select(var=Industry,dt,`Job Openings`,msa) %>% mutate(indicator="industry") %>%
group_by(var,msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
select(-go_no_go) %>% ungroup()
df1 <- openings_industries %>% select(var=Industry,dt,`Job Openings`,msa) %>% mutate(indicator="industry") %>%
group_by(var,msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
ungroup()
View(df1)
df0_cand <- total_candidates %>% select(dt,`Candidates`,msa) %>% mutate(indicator="Total Candidates") %>%
group_by(msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
mutate(var="Total Candidates")%>%
select(-go_no_go) %>% ungroup()
df0_cand <- total_candidates %>% select(dt,`Candidates`,msa) %>% mutate(indicator="Total Candidates") %>%
group_by(msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
mutate(var="Total Candidates")%>%
ungroup()
View(df0_cand)
df2_cand <- candidate_occ_grp %>% select(var=`Occupation Group`,dt,`Candidates`,msa) %>% mutate(indicator="Occupation Group") %>%
group_by(var,msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==base_date])/`Candidates`[dt==base_date]) %>%
select(-go_no_go) %>% ungroup()
df2_cand <- candidate_occ_grp %>% select(var=`Occupation Group`,dt,`Candidates`,msa) %>% mutate(indicator="Occupation Group") %>%
group_by(var,msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==base_date])/`Candidates`[dt==base_date]) %>%
ungroup()
df2_cand <- candidate_occ_grp %>% select(var=`Occupation Group`,dt,`Candidates`,msa) %>% mutate(indicator="Occupation Group") %>%
group_by(var,msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
ungroup()
# education level of candidates
df_educ_cand <- educ %>% select(var=`Education Level`,dt,Candidates=`Potential Candidates`,msa) %>% mutate(indicator="education") %>%
group_by(var,msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
ungroup()
df_cand <- bind_rows(df0_cand,df2_cand,df_educ_cand)%>%
mutate(dt=lubridate::mdy(dt)) %>%
arrange(dt)
write_csv(df_cand,"C:/Users/Swapnil PC/OneDrive - nd.edu/OneDrive - nd.edu/notre dame researchsbeconomydb/df_cand.csv")
write_csv(df_cand,"C:/Users/Swapnil PC/OneDrive - nd.edu/OneDrive - nd.edu/notre dame research/sbeconomydb/df_cand.csv")
write_csv(df_cand,"C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/df_cand.csv")
write_csv(df,"C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/df.csv")
runApp('C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/sb_economy_tracker.R')
View(df0)
df_educ <- educ %>% select(var=`Education Level`,dt,`Job Openings`,msa) %>% mutate(indicator="education") %>%
group_by(var,msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
select(-go_no_go) %>% ungroup()
df_educ <- educ %>% select(var=`Education Level`,dt,`Job Openings`,msa) %>% mutate(indicator="education") %>%
group_by(var,msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
ungroup()
df0 <- total_openings %>% select(dt,`Job Openings`,msa) %>% mutate(indicator="Total Openings") %>%
group_by(msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
ungroup() %>% mutate(var="Total Openings")
df1 <- openings_industries %>% select(var=Industry,dt,`Job Openings`,msa) %>% mutate(indicator="industry") %>%
group_by(var,msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
ungroup()
df_educ <- educ %>% select(var=`Education Level`,dt,`Job Openings`,msa) %>% mutate(indicator="education") %>%
group_by(var,msa) %>%
mutate(per_change=(`Job Openings`-`Job Openings`[dt==min(dt)])/`Job Openings`[dt==min(dt)]) %>%
ungroup()
df <- bind_rows(df0,df1,df_educ)%>%
mutate(dt=mdy(dt)) %>%
arrange(dt) # arrange seems to be important to avoid an additional line connecting first and last observations
write_csv(df,"C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/df.csv")
runApp('C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/sb_economy_tracker.R')
df0_cand <- total_candidates %>% select(dt,`Candidates`,msa) %>% mutate(indicator="Total Candidates") %>%
group_by(msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
mutate(var="Total Candidates")%>%
ungroup()
df2_cand <- candidate_occ_grp %>% select(var=`Occupation Group`,dt,`Candidates`,msa) %>% mutate(indicator="Occupation Group") %>%
group_by(var,msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
ungroup()
# education level of candidates
df_educ_cand <- educ %>% select(var=`Education Level`,dt,Candidates=`Potential Candidates`,msa) %>% mutate(indicator="education") %>%
group_by(var,msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
ungroup()
df_cand <- bind_rows(df0_cand,df2_cand,df_educ_cand)%>%
mutate(dt=lubridate::mdy(dt)) %>%
arrange(dt)
write_csv(df_cand,"C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/df_cand.csv")
View(df_cand)
runApp('C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/sb_economy_tracker.R')
View(df_cand)
View(df_cand)
max(df_cand$dt)
df_cand$msa %>% unique()
fig <- df_cand %>%
filter(indicator=="Occupation Group",
msa=="Elkhart Goshen") %>%
filter(dt==max(dt)) %>%
mutate(per=Candidates/sum(Candidates)) %>%
plot_ly(
labels = ~ paste0(var," (",round(per*100,0),"%",")"),
parents = NA,
values = ~ Candidates,
type = 'treemap',
hovertemplate = "%{label}<br>Candidates: %{value}<extra></extra>"#,
#text=~paste('Total Jobs =', bls_employment,
#'<br>Percentage =',paste(round(per_jobs*100,0),"%"))
) %>%
layout(autosize = TRUE,
title = paste0("Candidates by Occupation in ",input$select_msa," as of ",format(latest_date,"%b %d, %Y")),
margin = list(l = 0, r = 0, t = 30, b = 30),
annotations = list(text = "Source: www.indianacareerconnect.com",
font = list(size = 12),
showarrow = FALSE,
xref = 'paper', x = 0.01,
yref = 'paper', y = -0.05))
df_cand %>%
filter(indicator=="Occupation Group",
msa=="Elkhart Goshen") %>%
filter(dt==max(dt)) %>%
mutate(per=Candidates/sum(Candidates)) %>%
plot_ly(
labels = ~ paste0(var," (",round(per*100,0),"%",")"),
parents = NA,
values = ~ Candidates,
type = 'treemap',
hovertemplate = "%{label}<br>Candidates: %{value}<extra></extra>"#,
#text=~paste('Total Jobs =', bls_employment,
#'<br>Percentage =',paste(round(per_jobs*100,0),"%"))
)
latest_date=max(df_cand$dt)
fig <- df_cand %>%
filter(indicator=="Occupation Group",
msa=="Elkhart Goshen") %>%
filter(dt==max(dt)) %>%
mutate(per=Candidates/sum(Candidates)) %>%
plot_ly(
labels = ~ paste0(var," (",round(per*100,0),"%",")"),
parents = NA,
values = ~ Candidates,
type = 'treemap',
hovertemplate = "%{label}<br>Candidates: %{value}<extra></extra>"#,
#text=~paste('Total Jobs =', bls_employment,
#'<br>Percentage =',paste(round(per_jobs*100,0),"%"))
) %>%
layout(autosize = TRUE,
title = paste0("Candidates by Occupation in ","Elkhart Goshen"," as of ",format(latest_date,"%b %d, %Y")),
margin = list(l = 0, r = 0, t = 30, b = 30),
annotations = list(text = "Source: www.indianacareerconnect.com",
font = list(size = 12),
showarrow = FALSE,
xref = 'paper', x = 0.01,
yref = 'paper', y = -0.05))
fig
runApp('C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/sb_economy_tracker.R')
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Candidates/Candidates Available")
total_candidates_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
Candidates=as.numeric(str_remove(Candidates,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Candidates/Candidates Available")
total_candidates_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
Candidates=as.numeric(str_remove(Candidates,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="Elkhart - Goshen")
total_candidates <- bind_rows(total_candidates_1,total_candidates_2)
#### Candidates By Occupation Group ####
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/South Bend MSA/Candidates/Candidates By Occupation Group")
candidate_occ_grp_1 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
Candidates=as.numeric(str_remove(Candidates,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="South Bend - Mishawaka")
setwd("C:/Users/Swapnil PC/OneDrive - nd.edu/Data/Job postings/Elkhart Goshen MSA/Candidates/Candidates By Occupation Group")
candidate_occ_grp_2 <- lapply(list.files(), function(x) {
read_html(x) %>%
html_table(header = T) %>%
.[[1]] %>%
mutate(dt=str_remove(x,".xls"),
Candidates=as.numeric(str_remove(Candidates,",")))
}) %>% bind_rows() %>% tibble() %>% mutate(msa="Elkhart - Goshen")
candidate_occ_grp <- bind_rows(candidate_occ_grp_1,candidate_occ_grp_2)
base_date="06.26.20"
df0_cand <- total_candidates %>% select(dt,`Candidates`,msa) %>% mutate(indicator="Total Candidates") %>%
group_by(msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
mutate(var="Total Candidates")%>%
ungroup()
df2_cand <- candidate_occ_grp %>% select(var=`Occupation Group`,dt,`Candidates`,msa) %>% mutate(indicator="Occupation Group") %>%
group_by(var,msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
ungroup()
# education level of candidates
df_educ_cand <- educ %>% select(var=`Education Level`,dt,Candidates=`Potential Candidates`,msa) %>% mutate(indicator="education") %>%
group_by(var,msa) %>%
mutate(per_change=(`Candidates`-`Candidates`[dt==min(dt)])/`Candidates`[dt==min(dt)]) %>%
ungroup()
df_cand <- bind_rows(df0_cand,df2_cand,df_educ_cand)%>%
mutate(dt=lubridate::mdy(dt)) %>%
arrange(dt)
write_csv(df_cand,"C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/df_cand.csv")
runApp('C:/Users/Swapnil PC/OneDrive - nd.edu/notre dame research/sbeconomydb/sb_economy_tracker.R')
library(shiny); runApp('sb_economy_tracker.R')
